# Name of your application. Used to uniquely configure containers.
service: uptime-monitor

# Name of the container image.
image: rrbstudio/uptime-monitor

# Deploy to these servers.
servers:
  web:
    hosts:
      - monitor.rrbstudio.com
    cmd: bundle exec puma -C config/puma.rb
  job:
    hosts:
      - monitor.rrbstudio.com  
    cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
proxy:
  ssl: true
  host: monitor.rrbstudio.com

# Credentials for your image host.
registry:
  # Using Docker Hub
  username: rrbstudio

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_URL
    - STRIPE_SECRET_KEY
    - STRIPE_PUBLISHABLE_KEY
    - STRIPE_WEBHOOK_SECRET
    - SMTP_USERNAME
    - SMTP_PASSWORD
  clear:
    RAILS_ENV: production
    RAILS_LOG_LEVEL: info
    
    # Run the Solid Queue Supervisor in separate job containers
    SOLID_QUEUE_IN_PUMA: false
    
    # Set number of processes dedicated to Solid Queue
    JOB_CONCURRENCY: 2

    # Set number of cores available to the application on each server
    WEB_CONCURRENCY: 2

    # Database connection
    DB_HOST: uptime-monitor-db

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "uptime_monitor_storage:/rails/storage"


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: ruby-3.2.3
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#   user: app

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  db:
    image: postgres:15
    host: monitor.rrbstudio.com
    port: "127.0.0.1:5432:5432"
    env:
      clear:
        POSTGRES_DB: uptime_monitor_production
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data
